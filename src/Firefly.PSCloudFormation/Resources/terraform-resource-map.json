[
  {
    "TF": "aws_accessanalyzer_analyzer",
    "AWS": "AWS::AccessAnalyzer::Analyzer"
  },
  {
    "TF": "aws_acm_certificate",
    "AWS": "AWS::CertificateManager::Certificate"
  },
  {
    "TF": "aws_acmpca_certificate",
    "AWS": "AWS::ACMPCA::Certificate"
  },
  {
    "TF": "aws_acmpca_certificate_authority",
    "AWS": "AWS::ACMPCA::CertificateAuthority"
  },
  {
    "TF": "aws_amplify_app",
    "AWS": "AWS::Amplify::App"
  },
  {
    "TF": "aws_amplify_branch",
    "AWS": "AWS::Amplify::Branch"
  },
  {
    "TF": "aws_api_gateway_account",
    "AWS": "AWS::ApiGateway::Account"
  },
  {
    "TF": "aws_api_gateway_api_key",
    "AWS": "AWS::ApiGateway::ApiKey"
  },
  {
    "TF": "aws_api_gateway_authorizer",
    "AWS": "AWS::ApiGateway::Authorizer"
  },
  {
    "TF": "aws_api_gateway_base_path_mapping",
    "AWS": "AWS::ApiGateway::BasePathMapping"
  },
  {
    "TF": "aws_api_gateway_client_certificate",
    "AWS": "AWS::ApiGateway::ClientCertificate"
  },
  {
    "TF": "aws_api_gateway_deployment",
    "AWS": "AWS::ApiGateway::Deployment"
  },
  {
    "TF": "aws_api_gateway_documentation_part",
    "AWS": "AWS::ApiGateway::DocumentationPart"
  },
  {
    "TF": "aws_api_gateway_documentation_version",
    "AWS": "AWS::ApiGateway::DocumentationVersion"
  },
  {
    "TF": "aws_api_gateway_domain_name",
    "AWS": "AWS::ApiGateway::DomainName"
  },
  {
    "TF": "aws_api_gateway_gateway_response",
    "AWS": "AWS::ApiGateway::GatewayResponse"
  },
  {
    "TF": "aws_api_gateway_method",
    "AWS": "AWS::ApiGateway::Method"
  },
  {
    "TF": "aws_api_gateway_model",
    "AWS": "AWS::ApiGateway::Model"
  },
  {
    "TF": "aws_api_gateway_request_validator",
    "AWS": "AWS::ApiGateway::RequestValidator"
  },
  {
    "TF": "aws_api_gateway_resource",
    "AWS": "AWS::ApiGateway::Resource"
  },
  {
    "TF": "aws_api_gateway_rest_api",
    "AWS": "AWS::ApiGateway::RestApi"
  },
  {
    "TF": "aws_api_gateway_stage",
    "AWS": "AWS::ApiGateway::Stage"
  },
  {
    "TF": "aws_api_gateway_usage_plan",
    "AWS": "AWS::ApiGateway::UsagePlan"
  },
  {
    "TF": "aws_api_gateway_usage_plan_key",
    "AWS": "AWS::ApiGateway::UsagePlanKey"
  },
  {
    "TF": "aws_api_gateway_vpc_link",
    "AWS": "AWS::ApiGateway::VpcLink"
  },
  {
    "TF": "aws_apigatewayv2_api",
    "AWS": "AWS::ApiGatewayV2::Api"
  },
  {
    "TF": "aws_apigatewayv2_api_mapping",
    "AWS": "AWS::ApiGatewayV2::ApiMapping"
  },
  {
    "TF": "aws_apigatewayv2_authorizer",
    "AWS": "AWS::ApiGatewayV2::Authorizer"
  },
  {
    "TF": "aws_apigatewayv2_deployment",
    "AWS": "AWS::ApiGatewayV2::Deployment"
  },
  {
    "TF": "aws_apigatewayv2_domain_name",
    "AWS": "AWS::ApiGatewayV2::DomainName"
  },
  {
    "TF": "aws_apigatewayv2_integration",
    "AWS": "AWS::ApiGatewayV2::Integration"
  },
  {
    "TF": "aws_apigatewayv2_integration_response",
    "AWS": "AWS::ApiGatewayV2::IntegrationResponse"
  },
  {
    "TF": "aws_apigatewayv2_model",
    "AWS": "AWS::ApiGatewayV2::Model"
  },
  {
    "TF": "aws_apigatewayv2_route",
    "AWS": "AWS::ApiGatewayV2::Route"
  },
  {
    "TF": "aws_apigatewayv2_route_response",
    "AWS": "AWS::ApiGatewayV2::RouteResponse"
  },
  {
    "TF": "aws_apigatewayv2_stage",
    "AWS": "AWS::ApiGatewayV2::Stage"
  },
  {
    "TF": "aws_apigatewayv2_vpc_link",
    "AWS": "AWS::ApiGatewayV2::VpcLink"
  },
  {
    "TF": "aws_appautoscaling_policy",
    "AWS": "AWS::ApplicationAutoScaling::ScalingPolicy"
  },
  {
    "TF": "aws_appautoscaling_target",
    "AWS": "AWS::ApplicationAutoScaling::ScalableTarget"
  },
  {
    "TF": "aws_appconfig_application",
    "AWS": "AWS::AppConfig::Application"
  },
  {
    "TF": "aws_appconfig_configuration_profile",
    "AWS": "AWS::AppConfig::ConfigurationProfile"
  },
  {
    "TF": "aws_appconfig_deployment",
    "AWS": "AWS::AppConfig::Deployment"
  },
  {
    "TF": "aws_appconfig_deployment_strategy",
    "AWS": "AWS::AppConfig::DeploymentStrategy"
  },
  {
    "TF": "aws_appconfig_environment",
    "AWS": "AWS::AppConfig::Environment"
  },
  {
    "TF": "aws_appconfig_hosted_configuration_version",
    "AWS": "AWS::AppConfig::HostedConfigurationVersion"
  },
  {
    "TF": "aws_appmesh_gateway_route",
    "AWS": "AWS::AppMesh::GatewayRoute"
  },
  {
    "TF": "aws_appmesh_mesh",
    "AWS": "AWS::AppMesh::Mesh"
  },
  {
    "TF": "aws_appmesh_route",
    "AWS": "AWS::AppMesh::Route"
  },
  {
    "TF": "aws_appmesh_virtual_gateway",
    "AWS": "AWS::AppMesh::VirtualGateway"
  },
  {
    "TF": "aws_appmesh_virtual_node",
    "AWS": "AWS::AppMesh::VirtualNode"
  },
  {
    "TF": "aws_appmesh_virtual_router",
    "AWS": "AWS::AppMesh::VirtualRouter"
  },
  {
    "TF": "aws_appmesh_virtual_service",
    "AWS": "AWS::AppMesh::VirtualService"
  },
  {
    "TF": "aws_apprunner_service",
    "AWS": "AWS::AppRunner::Service"
  },
  {
    "TF": "aws_appstream_directory_config",
    "AWS": "AWS::AppStream::DirectoryConfig"
  },
  {
    "TF": "aws_appstream_fleet",
    "AWS": "AWS::AppStream::Fleet"
  },
  {
    "TF": "aws_appstream_image_builder",
    "AWS": "AWS::AppStream::ImageBuilder"
  },
  {
    "TF": "aws_appstream_stack",
    "AWS": "AWS::AppStream::Stack"
  },
  {
    "TF": "aws_appstream_user",
    "AWS": "AWS::AppStream::User"
  },
  {
    "TF": "aws_appsync_api_cache",
    "AWS": "AWS::AppSync::ApiCache"
  },
  {
    "TF": "aws_appsync_api_key",
    "AWS": "AWS::AppSync::ApiKey"
  },
  {
    "TF": "aws_appsync_datasource",
    "AWS": "AWS::AppSync::DataSource"
  },
  {
    "TF": "aws_appsync_domain_name",
    "AWS": "AWS::AppSync::DomainName"
  },
  {
    "TF": "aws_appsync_domain_name_api_association",
    "AWS": "AWS::AppSync::DomainNameApiAssociation"
  },
  {
    "TF": "aws_appsync_graphql_api",
    "AWS": "AWS::AppSync::GraphQLApi"
  },
  {
    "TF": "aws_appsync_resolver",
    "AWS": "AWS::AppSync::Resolver"
  },
  {
    "TF": "aws_athena_named_query",
    "AWS": "AWS::Athena::NamedQuery"
  },
  {
    "TF": "aws_athena_workgroup",
    "AWS": "AWS::Athena::WorkGroup"
  },
  {
    "TF": "aws_autoscaling_group",
    "AWS": "AWS::AutoScaling::AutoScalingGroup"
  },
  {
    "TF": "aws_autoscaling_lifecycle_hook",
    "AWS": "AWS::AutoScaling::LifecycleHook"
  },
  {
    "TF": "aws_autoscaling_policy",
    "AWS": "AWS::AutoScaling::ScalingPolicy"
  },
  {
    "TF": "aws_autoscaling_schedule",
    "AWS": "AWS::AutoScaling::ScheduledAction"
  },
  {
    "TF": "aws_autoscalingplans_scaling_plan",
    "AWS": "AWS::AutoScalingPlans::ScalingPlan"
  },
  {
    "TF": "aws_batch_compute_environment",
    "AWS": "AWS::Batch::ComputeEnvironment"
  },
  {
    "TF": "aws_batch_job_definition",
    "AWS": "AWS::Batch::JobDefinition"
  },
  {
    "TF": "aws_batch_job_queue",
    "AWS": "AWS::Batch::JobQueue"
  },
  {
    "TF": "aws_batch_scheduling_policy",
    "AWS": "AWS::Batch::SchedulingPolicy"
  },
  {
    "TF": "aws_budgets_budget",
    "AWS": "AWS::Budgets::Budget"
  },
  {
    "TF": "aws_cloud9_environment_ec2",
    "AWS": "AWS::Cloud9::EnvironmentEC2"
  },
  {
    "TF": "aws_cloudformation_stack",
    "AWS": "AWS::CloudFormation::Stack"
  },
  {
    "TF": "aws_cloudformation_stack_set",
    "AWS": "AWS::CloudFormation::StackSet"
  },
  {
    "TF": "aws_cloudfront_cache_policy",
    "AWS": "AWS::CloudFront::CachePolicy"
  },
  {
    "TF": "aws_cloudfront_distribution",
    "AWS": "AWS::CloudFront::Distribution"
  },
  {
    "TF": "aws_cloudfront_function",
    "AWS": "AWS::CloudFront::Function"
  },
  {
    "TF": "aws_cloudfront_key_group",
    "AWS": "AWS::CloudFront::KeyGroup"
  },
  {
    "TF": "aws_cloudfront_origin_request_policy",
    "AWS": "AWS::CloudFront::OriginRequestPolicy"
  },
  {
    "TF": "aws_cloudfront_public_key",
    "AWS": "AWS::CloudFront::PublicKey"
  },
  {
    "TF": "aws_cloudfront_realtime_log_config",
    "AWS": "AWS::CloudFront::RealtimeLogConfig"
  },
  {
    "TF": "aws_cloudfront_response_headers_policy",
    "AWS": "AWS::CloudFront::ResponseHeadersPolicy"
  },
  {
    "TF": "aws_cloudwatch_composite_alarm",
    "AWS": "AWS::CloudWatch::CompositeAlarm"
  },
  {
    "TF": "aws_cloudwatch_dashboard",
    "AWS": "AWS::CloudWatch::Dashboard"
  },
  {
    "TF": "aws_cloudwatch_event_api_destination",
    "AWS": "AWS::Events::ApiDestination"
  },
  {
    "TF": "aws_cloudwatch_event_archive",
    "AWS": "AWS::Events::Archive"
  },
  {
    "TF": "aws_cloudwatch_event_connection",
    "AWS": "AWS::Events::Connection"
  },
  {
    "TF": "aws_cloudwatch_event_rule",
    "AWS": "AWS::Events::Rule"
  },
  {
    "TF": "aws_cloudwatch_log_destination",
    "AWS": "AWS::Logs::Destination"
  },
  {
    "TF": "aws_cloudwatch_log_group",
    "AWS": "AWS::Logs::LogGroup"
  },
  {
    "TF": "aws_cloudwatch_log_metric_filter",
    "AWS": "AWS::Logs::MetricFilter"
  },
  {
    "TF": "aws_cloudwatch_log_resource_policy",
    "AWS": "AWS::Logs::ResourcePolicy"
  },
  {
    "TF": "aws_cloudwatch_log_stream",
    "AWS": "AWS::Logs::LogStream"
  },
  {
    "TF": "aws_cloudwatch_log_subscription_filter",
    "AWS": "AWS::Logs::SubscriptionFilter"
  },
  {
    "TF": "aws_cloudwatch_metric_alarm",
    "AWS": "AWS::CloudWatch::Alarm"
  },
  {
    "TF": "aws_cloudwatch_metric_stream",
    "AWS": "AWS::CloudWatch::MetricStream"
  },
  {
    "TF": "aws_codeartifact_domain",
    "AWS": "AWS::CodeArtifact::Domain"
  },
  {
    "TF": "aws_codeartifact_repository",
    "AWS": "AWS::CodeArtifact::Repository"
  },
  {
    "TF": "aws_codebuild_project",
    "AWS": "AWS::CodeBuild::Project"
  },
  {
    "TF": "aws_codebuild_report_group",
    "AWS": "AWS::CodeBuild::ReportGroup"
  },
  {
    "TF": "aws_codebuild_source_credential",
    "AWS": "AWS::CodeBuild::SourceCredential"
  },
  {
    "TF": "aws_codecommit_repository",
    "AWS": "AWS::CodeCommit::Repository"
  },
  {
    "TF": "aws_codedeploy_deployment_config",
    "AWS": "AWS::CodeDeploy::DeploymentConfig"
  },
  {
    "TF": "aws_codedeploy_deployment_group",
    "AWS": "AWS::CodeDeploy::DeploymentGroup"
  },
  {
    "TF": "aws_codepipeline_webhook",
    "AWS": "AWS::CodePipeline::Webhook"
  },
  {
    "TF": "aws_codestarconnections_connection",
    "AWS": "AWS::CodeStarConnections::Connection"
  },
  {
    "TF": "aws_codestarnotifications_notification_rule",
    "AWS": "AWS::CodeStarNotifications::NotificationRule"
  },
  {
    "TF": "aws_cognito_identity_pool",
    "AWS": "AWS::Cognito::IdentityPool"
  },
  {
    "TF": "aws_cognito_identity_pool_roles_attachment",
    "AWS": "AWS::Cognito::IdentityPoolRoleAttachment"
  },
  {
    "TF": "aws_cognito_user_group",
    "AWS": "AWS::Cognito::UserPoolGroup"
  },
  {
    "TF": "aws_cognito_user_pool",
    "AWS": "AWS::Cognito::UserPool"
  },
  {
    "TF": "aws_cognito_user_pool_client",
    "AWS": "AWS::Cognito::UserPoolClient"
  },
  {
    "TF": "aws_cognito_user_pool_domain",
    "AWS": "AWS::Cognito::UserPoolDomain"
  },
  {
    "TF": "aws_config_config_rule",
    "AWS": "AWS::Config::ConfigRule"
  },
  {
    "TF": "aws_config_configuration_aggregator",
    "AWS": "AWS::Config::ConfigurationAggregator"
  },
  {
    "TF": "aws_config_configuration_recorder",
    "AWS": "AWS::Config::ConfigurationRecorder"
  },
  {
    "TF": "aws_config_conformance_pack",
    "AWS": "AWS::Config::ConformancePack"
  },
  {
    "TF": "aws_config_delivery_channel",
    "AWS": "AWS::Config::DeliveryChannel"
  },
  {
    "TF": "aws_config_organization_conformance_pack",
    "AWS": "AWS::Config::OrganizationConformancePack"
  },
  {
    "TF": "aws_config_remediation_configuration",
    "AWS": "AWS::Config::RemediationConfiguration"
  },
  {
    "TF": "aws_connect_contact_flow",
    "AWS": "AWS::Connect::ContactFlow"
  },
  {
    "TF": "aws_connect_contact_flow_module",
    "AWS": "AWS::Connect::ContactFlowModule"
  },
  {
    "TF": "aws_connect_hours_of_operation",
    "AWS": "AWS::Connect::HoursOfOperation"
  },
  {
    "TF": "aws_connect_quick_connect",
    "AWS": "AWS::Connect::QuickConnect"
  },
  {
    "TF": "aws_cur_report_definition",
    "AWS": "AWS::CUR::ReportDefinition"
  },
  {
    "TF": "aws_datapipeline_pipeline",
    "AWS": "AWS::DataPipeline::Pipeline"
  },
  {
    "TF": "aws_datasync_agent",
    "AWS": "AWS::DataSync::Agent"
  },
  {
    "TF": "aws_datasync_location_efs",
    "AWS": "AWS::DataSync::LocationEFS"
  },
  {
    "TF": "aws_datasync_location_hdfs",
    "AWS": "AWS::DataSync::LocationHDFS"
  },
  {
    "TF": "aws_datasync_location_nfs",
    "AWS": "AWS::DataSync::LocationNFS"
  },
  {
    "TF": "aws_datasync_location_s3",
    "AWS": "AWS::DataSync::LocationS3"
  },
  {
    "TF": "aws_datasync_location_smb",
    "AWS": "AWS::DataSync::LocationSMB"
  },
  {
    "TF": "aws_datasync_task",
    "AWS": "AWS::DataSync::Task"
  },
  {
    "TF": "aws_dax_cluster",
    "AWS": "AWS::DAX::Cluster"
  },
  {
    "TF": "aws_dax_parameter_group",
    "AWS": "AWS::DAX::ParameterGroup"
  },
  {
    "TF": "aws_dax_subnet_group",
    "AWS": "AWS::DAX::SubnetGroup"
  },
  {
    "TF": "aws_db_instance",
    "AWS": "AWS::RDS::DBInstance"
  },
  {
    "TF": "aws_db_option_group",
    "AWS": "AWS::RDS::OptionGroup"
  },
  {
    "TF": "aws_db_parameter_group",
    "AWS": "AWS::RDS::DBParameterGroup"
  },
  {
    "TF": "aws_db_proxy",
    "AWS": "AWS::RDS::DBProxy"
  },
  {
    "TF": "aws_db_proxy_endpoint",
    "AWS": "AWS::RDS::DBProxyEndpoint"
  },
  {
    "TF": "aws_db_security_group",
    "AWS": "AWS::RDS::DBSecurityGroup"
  },
  {
    "TF": "aws_db_subnet_group",
    "AWS": "AWS::RDS::DBSubnetGroup"
  },
  {
    "TF": "aws_detective_graph",
    "AWS": "AWS::Detective::Graph"
  },
  {
    "TF": "aws_devicefarm_device_pool",
    "AWS": "AWS::DeviceFarm::DevicePool"
  },
  {
    "TF": "aws_devicefarm_instance_profile",
    "AWS": "AWS::DeviceFarm::InstanceProfile"
  },
  {
    "TF": "aws_devicefarm_network_profile",
    "AWS": "AWS::DeviceFarm::NetworkProfile"
  },
  {
    "TF": "aws_devicefarm_project",
    "AWS": "AWS::DeviceFarm::Project"
  },
  {
    "TF": "aws_dlm_lifecycle_policy",
    "AWS": "AWS::DLM::LifecyclePolicy"
  },
  {
    "TF": "aws_dms_certificate",
    "AWS": "AWS::DMS::Certificate"
  },
  {
    "TF": "aws_dms_endpoint",
    "AWS": "AWS::DMS::Endpoint"
  },
  {
    "TF": "aws_dms_event_subscription",
    "AWS": "AWS::DMS::EventSubscription"
  },
  {
    "TF": "aws_dms_replication_instance",
    "AWS": "AWS::DMS::ReplicationInstance"
  },
  {
    "TF": "aws_dms_replication_subnet_group",
    "AWS": "AWS::DMS::ReplicationSubnetGroup"
  },
  {
    "TF": "aws_dms_replication_task",
    "AWS": "AWS::DMS::ReplicationTask"
  },
  {
    "TF": "aws_dynamodb_global_table",
    "AWS": "AWS::DynamoDB::GlobalTable"
  },
  {
    "TF": "aws_dynamodb_table",
    "AWS": "AWS::DynamoDB::Table"
  },
  {
    "TF": "aws_ebs_volume",
    "AWS": "AWS::EC2::Volume"
  },
  {
    "TF": "aws_ec2_capacity_reservation",
    "AWS": "AWS::EC2::CapacityReservation"
  },
  {
    "TF": "aws_ec2_carrier_gateway",
    "AWS": "AWS::EC2::CarrierGateway"
  },
  {
    "TF": "aws_ec2_client_vpn_authorization_rule",
    "AWS": "AWS::EC2::ClientVpnAuthorizationRule"
  },
  {
    "TF": "aws_ec2_client_vpn_endpoint",
    "AWS": "AWS::EC2::ClientVpnEndpoint"
  },
  {
    "TF": "aws_ec2_client_vpn_route",
    "AWS": "AWS::EC2::ClientVpnRoute"
  },
  {
    "TF": "aws_ec2_host",
    "AWS": "AWS::EC2::Host"
  },
  {
    "TF": "aws_ec2_local_gateway_route",
    "AWS": "AWS::EC2::LocalGatewayRoute"
  },
  {
    "TF": "aws_ec2_local_gateway_route_table_vpc_association",
    "AWS": "AWS::EC2::LocalGatewayRouteTableVPCAssociation"
  },
  {
    "TF": "aws_ec2_traffic_mirror_filter",
    "AWS": "AWS::EC2::TrafficMirrorFilter"
  },
  {
    "TF": "aws_ec2_traffic_mirror_filter_rule",
    "AWS": "AWS::EC2::TrafficMirrorFilterRule"
  },
  {
    "TF": "aws_ec2_traffic_mirror_session",
    "AWS": "AWS::EC2::TrafficMirrorSession"
  },
  {
    "TF": "aws_ec2_traffic_mirror_target",
    "AWS": "AWS::EC2::TrafficMirrorTarget"
  },
  {
    "TF": "aws_ec2_transit_gateway",
    "AWS": "AWS::EC2::TransitGateway"
  },
  {
    "TF": "aws_ec2_transit_gateway_peering_attachment",
    "AWS": "AWS::EC2::TransitGatewayPeeringAttachment"
  },
  {
    "TF": "aws_ec2_transit_gateway_route",
    "AWS": "AWS::EC2::TransitGatewayRoute"
  },
  {
    "TF": "aws_ec2_transit_gateway_route_table",
    "AWS": "AWS::EC2::TransitGatewayRouteTable"
  },
  {
    "TF": "aws_ec2_transit_gateway_route_table_association",
    "AWS": "AWS::EC2::TransitGatewayRouteTableAssociation"
  },
  {
    "TF": "aws_ec2_transit_gateway_route_table_propagation",
    "AWS": "AWS::EC2::TransitGatewayRouteTablePropagation"
  },
  {
    "TF": "aws_ec2_transit_gateway_vpc_attachment",
    "AWS": "AWS::EC2::TransitGatewayVpcAttachment"
  },
  {
    "TF": "aws_ecr_registry_policy",
    "AWS": "AWS::ECR::RegistryPolicy"
  },
  {
    "TF": "aws_ecr_replication_configuration",
    "AWS": "AWS::ECR::ReplicationConfiguration"
  },
  {
    "TF": "aws_ecr_repository",
    "AWS": "AWS::ECR::Repository"
  },
  {
    "TF": "aws_ecrpublic_repository",
    "AWS": "AWS::ECR::PublicRepository"
  },
  {
    "TF": "aws_ecs_capacity_provider",
    "AWS": "AWS::ECS::CapacityProvider"
  },
  {
    "TF": "aws_ecs_cluster",
    "AWS": "AWS::ECS::Cluster"
  },
  {
    "TF": "aws_ecs_service",
    "AWS": "AWS::ECS::Service"
  },
  {
    "TF": "aws_ecs_task_definition",
    "AWS": "AWS::ECS::TaskDefinition"
  },
  {
    "TF": "aws_ecs_task_set",
    "AWS": "AWS::ECS::TaskSet"
  },
  {
    "TF": "aws_efs_access_point",
    "AWS": "AWS::EFS::AccessPoint"
  },
  {
    "TF": "aws_efs_file_system",
    "AWS": "AWS::EFS::FileSystem"
  },
  {
    "TF": "aws_efs_mount_target",
    "AWS": "AWS::EFS::MountTarget"
  },
  {
    "TF": "aws_eip",
    "AWS": "AWS::EC2::EIP"
  },
  {
    "TF": "aws_eks_addon",
    "AWS": "AWS::EKS::Addon"
  },
  {
    "TF": "aws_eks_cluster",
    "AWS": "AWS::EKS::Cluster"
  },
  {
    "TF": "aws_eks_fargate_profile",
    "AWS": "AWS::EKS::FargateProfile"
  },
  {
    "TF": "aws_eks_node_group",
    "AWS": "AWS::EKS::Nodegroup"
  },
  {
    "TF": "aws_elastic_beanstalk_application",
    "AWS": "AWS::ElasticBeanstalk::Application"
  },
  {
    "TF": "aws_elastic_beanstalk_application_version",
    "AWS": "AWS::ElasticBeanstalk::ApplicationVersion"
  },
  {
    "TF": "aws_elastic_beanstalk_configuration_template",
    "AWS": "AWS::ElasticBeanstalk::ConfigurationTemplate"
  },
  {
    "TF": "aws_elastic_beanstalk_environment",
    "AWS": "AWS::ElasticBeanstalk::Environment"
  },
  {
    "TF": "aws_elasticache_global_replication_group",
    "AWS": "AWS::ElastiCache::GlobalReplicationGroup"
  },
  {
    "TF": "aws_elasticache_parameter_group",
    "AWS": "AWS::ElastiCache::ParameterGroup"
  },
  {
    "TF": "aws_elasticache_replication_group",
    "AWS": "AWS::ElastiCache::ReplicationGroup"
  },
  {
    "TF": "aws_elasticache_security_group",
    "AWS": "AWS::ElastiCache::SecurityGroup"
  },
  {
    "TF": "aws_elasticache_subnet_group",
    "AWS": "AWS::ElastiCache::SubnetGroup"
  },
  {
    "TF": "aws_elasticache_user",
    "AWS": "AWS::ElastiCache::User"
  },
  {
    "TF": "aws_elasticache_user_group",
    "AWS": "AWS::ElastiCache::UserGroup"
  },
  {
    "TF": "aws_elasticsearch_domain",
    "AWS": "AWS::Elasticsearch::Domain"
  },
  {
    "TF": "aws_elb",
    "AWS": "AWS::ElasticLoadBalancing::LoadBalancer"
  },
  {
    "TF": "aws_emr_cluster",
    "AWS": "AWS::EMR::Cluster"
  },
  {
    "TF": "aws_emr_security_configuration",
    "AWS": "AWS::EMR::SecurityConfiguration"
  },
  {
    "TF": "aws_emr_studio",
    "AWS": "AWS::EMR::Studio"
  },
  {
    "TF": "aws_emr_studio_session_mapping",
    "AWS": "AWS::EMR::StudioSessionMapping"
  },
  {
    "TF": "aws_flow_log",
    "AWS": "AWS::EC2::FlowLog"
  },
  {
    "TF": "aws_fms_policy",
    "AWS": "AWS::FMS::Policy"
  },
  {
    "TF": "aws_gamelift_alias",
    "AWS": "AWS::GameLift::Alias"
  },
  {
    "TF": "aws_gamelift_build",
    "AWS": "AWS::GameLift::Build"
  },
  {
    "TF": "aws_gamelift_fleet",
    "AWS": "AWS::GameLift::Fleet"
  },
  {
    "TF": "aws_gamelift_game_session_queue",
    "AWS": "AWS::GameLift::GameSessionQueue"
  },
  {
    "TF": "aws_globalaccelerator_accelerator",
    "AWS": "AWS::GlobalAccelerator::Accelerator"
  },
  {
    "TF": "aws_globalaccelerator_endpoint_group",
    "AWS": "AWS::GlobalAccelerator::EndpointGroup"
  },
  {
    "TF": "aws_globalaccelerator_listener",
    "AWS": "AWS::GlobalAccelerator::Listener"
  },
  {
    "TF": "aws_glue_classifier",
    "AWS": "AWS::Glue::Classifier"
  },
  {
    "TF": "aws_glue_connection",
    "AWS": "AWS::Glue::Connection"
  },
  {
    "TF": "aws_glue_crawler",
    "AWS": "AWS::Glue::Crawler"
  },
  {
    "TF": "aws_glue_data_catalog_encryption_settings",
    "AWS": "AWS::Glue::DataCatalogEncryptionSettings"
  },
  {
    "TF": "aws_glue_dev_endpoint",
    "AWS": "AWS::Glue::DevEndpoint"
  },
  {
    "TF": "aws_glue_job",
    "AWS": "AWS::Glue::Job"
  },
  {
    "TF": "aws_glue_ml_transform",
    "AWS": "AWS::Glue::MLTransform"
  },
  {
    "TF": "aws_glue_partition",
    "AWS": "AWS::Glue::Partition"
  },
  {
    "TF": "aws_glue_registry",
    "AWS": "AWS::Glue::Registry"
  },
  {
    "TF": "aws_glue_schema",
    "AWS": "AWS::Glue::Schema"
  },
  {
    "TF": "aws_glue_security_configuration",
    "AWS": "AWS::Glue::SecurityConfiguration"
  },
  {
    "TF": "aws_glue_trigger",
    "AWS": "AWS::Glue::Trigger"
  },
  {
    "TF": "aws_glue_workflow",
    "AWS": "AWS::Glue::Workflow"
  },
  {
    "TF": "aws_guardduty_detector",
    "AWS": "AWS::GuardDuty::Detector"
  },
  {
    "TF": "aws_guardduty_filter",
    "AWS": "AWS::GuardDuty::Filter"
  },
  {
    "TF": "aws_guardduty_ipset",
    "AWS": "AWS::GuardDuty::IPSet"
  },
  {
    "TF": "aws_guardduty_member",
    "AWS": "AWS::GuardDuty::Member"
  },
  {
    "TF": "aws_guardduty_threatintelset",
    "AWS": "AWS::GuardDuty::ThreatIntelSet"
  },
  {
    "TF": "aws_iam_access_key",
    "AWS": "AWS::IAM::AccessKey"
  },
  {
    "TF": "aws_iam_group",
    "AWS": "AWS::IAM::Group"
  },
  {
    "TF": "aws_iam_instance_profile",
    "AWS": "AWS::IAM::InstanceProfile"
  },
  {
    "TF": "aws_iam_policy",
    "AWS": "AWS::IAM::ManagedPolicy"
  },
  {
    "TF": "aws_iam_role",
    "AWS": "AWS::IAM::Role"
  },
  {
    "TF": "aws_iam_saml_provider",
    "AWS": "AWS::IAM::SAMLProvider"
  },
  {
    "TF": "aws_iam_server_certificate",
    "AWS": "AWS::IAM::ServerCertificate"
  },
  {
    "TF": "aws_iam_service_linked_role",
    "AWS": "AWS::IAM::ServiceLinkedRole"
  },
  {
    "TF": "aws_iam_user",
    "AWS": "AWS::IAM::User"
  },
  {
    "TF": "aws_imagebuilder_component",
    "AWS": "AWS::ImageBuilder::Component"
  },
  {
    "TF": "aws_imagebuilder_distribution_configuration",
    "AWS": "AWS::ImageBuilder::DistributionConfiguration"
  },
  {
    "TF": "aws_imagebuilder_image",
    "AWS": "AWS::ImageBuilder::Image"
  },
  {
    "TF": "aws_imagebuilder_image_pipeline",
    "AWS": "AWS::ImageBuilder::ImagePipeline"
  },
  {
    "TF": "aws_imagebuilder_image_recipe",
    "AWS": "AWS::ImageBuilder::ImageRecipe"
  },
  {
    "TF": "aws_imagebuilder_infrastructure_configuration",
    "AWS": "AWS::ImageBuilder::InfrastructureConfiguration"
  },
  {
    "TF": "aws_inspector_assessment_target",
    "AWS": "AWS::Inspector::AssessmentTarget"
  },
  {
    "TF": "aws_inspector_assessment_template",
    "AWS": "AWS::Inspector::AssessmentTemplate"
  },
  {
    "TF": "aws_inspector_resource_group",
    "AWS": "AWS::Inspector::ResourceGroup"
  },
  {
    "TF": "aws_instance",
    "AWS": "AWS::EC2::Instance"
  },
  {
    "TF": "aws_internet_gateway",
    "AWS": "AWS::EC2::InternetGateway"
  },
  {
    "TF": "aws_iot_authorizer",
    "AWS": "AWS::IoT::Authorizer"
  },
  {
    "TF": "aws_iot_certificate",
    "AWS": "AWS::IoT::Certificate"
  },
  {
    "TF": "aws_iot_policy",
    "AWS": "AWS::IoT::Policy"
  },
  {
    "TF": "aws_iot_thing",
    "AWS": "AWS::IoT::Thing"
  },
  {
    "TF": "aws_iot_thing_principal_attachment",
    "AWS": "AWS::IoT::ThingPrincipalAttachment"
  },
  {
    "TF": "aws_iot_topic_rule",
    "AWS": "AWS::IoT::TopicRule"
  },
  {
    "TF": "aws_kinesis_analytics_application",
    "AWS": "AWS::KinesisAnalytics::Application"
  },
  {
    "TF": "aws_kinesis_firehose_delivery_stream",
    "AWS": "AWS::KinesisFirehose::DeliveryStream"
  },
  {
    "TF": "aws_kinesis_stream",
    "AWS": "AWS::Kinesis::Stream"
  },
  {
    "TF": "aws_kinesis_stream_consumer",
    "AWS": "AWS::Kinesis::StreamConsumer"
  },
  {
    "TF": "aws_kinesis_video_stream",
    "AWS": "AWS::KinesisVideo::Stream"
  },
  {
    "TF": "aws_kinesisanalyticsv2_application",
    "AWS": "AWS::KinesisAnalyticsV2::Application"
  },
  {
    "TF": "aws_kms_alias",
    "AWS": "AWS::KMS::Alias"
  },
  {
    "TF": "aws_kms_key",
    "AWS": "AWS::KMS::Key"
  },
  {
    "TF": "aws_kms_replica_key",
    "AWS": "AWS::KMS::ReplicaKey"
  },
  {
    "TF": "aws_lakeformation_data_lake_settings",
    "AWS": "AWS::LakeFormation::DataLakeSettings"
  },
  {
    "TF": "aws_lakeformation_permissions",
    "AWS": "AWS::LakeFormation::Permissions"
  },
  {
    "TF": "aws_lakeformation_resource",
    "AWS": "AWS::LakeFormation::Resource"
  },
  {
    "TF": "aws_lambda_alias",
    "AWS": "AWS::Lambda::Alias"
  },
  {
    "TF": "aws_lambda_code_signing_config",
    "AWS": "AWS::Lambda::CodeSigningConfig"
  },
  {
    "TF": "aws_lambda_event_source_mapping",
    "AWS": "AWS::Lambda::EventSourceMapping"
  },
  {
    "TF": "aws_lambda_function",
    "AWS": "AWS::Lambda::Function"
  },
  {
    "TF": "aws_lambda_layer_version",
    "AWS": "AWS::Lambda::LayerVersion"
  },
  {
    "TF": "aws_lambda_layer_version_permission",
    "AWS": "AWS::Lambda::LayerVersionPermission"
  },
  {
    "TF": "aws_lambda_permission",
    "AWS": "AWS::Lambda::Permission"
  },
  {
    "TF": "aws_launch_configuration",
    "AWS": "AWS::AutoScaling::LaunchConfiguration"
  },
  {
    "TF": "aws_launch_template",
    "AWS": "AWS::EC2::LaunchTemplate"
  },
  {
    "TF": "aws_lb",
    "AWS": "AWS::ElasticLoadBalancingV2::LoadBalancer"
  },
  {
    "TF": "aws_lb_listener",
    "AWS": "AWS::ElasticLoadBalancingV2::Listener"
  },
  {
    "TF": "aws_lb_listener_certificate",
    "AWS": "AWS::ElasticLoadBalancingV2::ListenerCertificate"
  },
  {
    "TF": "aws_lb_listener_rule",
    "AWS": "AWS::ElasticLoadBalancingV2::ListenerRule"
  },
  {
    "TF": "aws_lb_target_group",
    "AWS": "AWS::ElasticLoadBalancingV2::TargetGroup"
  },
  {
    "TF": "aws_lex_bot",
    "AWS": "AWS::Lex::Bot"
  },
  {
    "TF": "aws_lex_bot_alias",
    "AWS": "AWS::Lex::BotAlias"
  },
  {
    "TF": "aws_lightsail_instance",
    "AWS": "AWS::Lightsail::Instance"
  },
  {
    "TF": "aws_lightsail_static_ip",
    "AWS": "AWS::Lightsail::StaticIp"
  },
  {
    "TF": "aws_media_convert_queue",
    "AWS": "AWS::MediaConvert::Queue"
  },
  {
    "TF": "aws_media_package_channel",
    "AWS": "AWS::MediaPackage::Channel"
  },
  {
    "TF": "aws_media_store_container",
    "AWS": "AWS::MediaStore::Container"
  },
  {
    "TF": "aws_memorydb_acl",
    "AWS": "AWS::MemoryDB::ACL"
  },
  {
    "TF": "aws_memorydb_cluster",
    "AWS": "AWS::MemoryDB::Cluster"
  },
  {
    "TF": "aws_memorydb_parameter_group",
    "AWS": "AWS::MemoryDB::ParameterGroup"
  },
  {
    "TF": "aws_memorydb_subnet_group",
    "AWS": "AWS::MemoryDB::SubnetGroup"
  },
  {
    "TF": "aws_memorydb_user",
    "AWS": "AWS::MemoryDB::User"
  },
  {
    "TF": "aws_msk_cluster",
    "AWS": "AWS::MSK::Cluster"
  },
  {
    "TF": "aws_mwaa_environment",
    "AWS": "AWS::MWAA::Environment"
  },
  {
    "TF": "aws_nat_gateway",
    "AWS": "AWS::EC2::NatGateway"
  },
  {
    "TF": "aws_neptune_cluster_parameter_group",
    "AWS": "AWS::Neptune::DBClusterParameterGroup"
  },
  {
    "TF": "aws_network_acl",
    "AWS": "AWS::EC2::NetworkAcl"
  },
  {
    "TF": "aws_networkfirewall_firewall",
    "AWS": "AWS::NetworkFirewall::Firewall"
  },
  {
    "TF": "aws_networkfirewall_firewall_policy",
    "AWS": "AWS::NetworkFirewall::FirewallPolicy"
  },
  {
    "TF": "aws_networkfirewall_logging_configuration",
    "AWS": "AWS::NetworkFirewall::LoggingConfiguration"
  },
  {
    "TF": "aws_networkfirewall_rule_group",
    "AWS": "AWS::NetworkFirewall::RuleGroup"
  },
  {
    "TF": "aws_opsworks_instance",
    "AWS": "AWS::OpsWorks::Instance"
  },
  {
    "TF": "aws_opsworks_stack",
    "AWS": "AWS::OpsWorks::Stack"
  },
  {
    "TF": "aws_opsworks_user_profile",
    "AWS": "AWS::OpsWorks::UserProfile"
  },
  {
    "TF": "aws_pinpoint_adm_channel",
    "AWS": "AWS::Pinpoint::ADMChannel"
  },
  {
    "TF": "aws_pinpoint_apns_channel",
    "AWS": "AWS::Pinpoint::APNSChannel"
  },
  {
    "TF": "aws_pinpoint_apns_sandbox_channel",
    "AWS": "AWS::Pinpoint::APNSSandboxChannel"
  },
  {
    "TF": "aws_pinpoint_apns_voip_channel",
    "AWS": "AWS::Pinpoint::APNSVoipChannel"
  },
  {
    "TF": "aws_pinpoint_apns_voip_sandbox_channel",
    "AWS": "AWS::Pinpoint::APNSVoipSandboxChannel"
  },
  {
    "TF": "aws_pinpoint_app",
    "AWS": "AWS::Pinpoint::App"
  },
  {
    "TF": "aws_pinpoint_baidu_channel",
    "AWS": "AWS::Pinpoint::BaiduChannel"
  },
  {
    "TF": "aws_pinpoint_email_channel",
    "AWS": "AWS::Pinpoint::EmailChannel"
  },
  {
    "TF": "aws_pinpoint_event_stream",
    "AWS": "AWS::Pinpoint::EventStream"
  },
  {
    "TF": "aws_pinpoint_gcm_channel",
    "AWS": "AWS::Pinpoint::GCMChannel"
  },
  {
    "TF": "aws_pinpoint_sms_channel",
    "AWS": "AWS::Pinpoint::SMSChannel"
  },
  {
    "TF": "aws_qldb_ledger",
    "AWS": "AWS::QLDB::Ledger"
  },
  {
    "TF": "aws_quicksight_data_source",
    "AWS": "AWS::QuickSight::DataSource"
  },
  {
    "TF": "aws_ram_resource_share",
    "AWS": "AWS::RAM::ResourceShare"
  },
  {
    "TF": "aws_rds_cluster",
    "AWS": "AWS::RDS::DBCluster"
  },
  {
    "TF": "aws_rds_cluster_parameter_group",
    "AWS": "AWS::RDS::DBClusterParameterGroup"
  },
  {
    "TF": "aws_rds_global_cluster",
    "AWS": "AWS::RDS::GlobalCluster"
  },
  {
    "TF": "aws_redshift_cluster",
    "AWS": "AWS::Redshift::Cluster"
  },
  {
    "TF": "aws_redshift_parameter_group",
    "AWS": "AWS::Redshift::ClusterParameterGroup"
  },
  {
    "TF": "aws_redshift_security_group",
    "AWS": "AWS::Redshift::ClusterSecurityGroup"
  },
  {
    "TF": "aws_redshift_subnet_group",
    "AWS": "AWS::Redshift::ClusterSubnetGroup"
  },
  {
    "TF": "aws_resourcegroups_group",
    "AWS": "AWS::ResourceGroups::Group"
  },
  {
    "TF": "aws_route",
    "AWS": "AWS::EC2::Route"
  },
  {
    "TF": "aws_route_table",
    "AWS": "AWS::EC2::RouteTable"
  },
  {
    "TF": "aws_route_table_association",
    "AWS": "AWS::EC2::SubnetRouteTableAssociation"
  },
  {
    "TF": "aws_route53_health_check",
    "AWS": "AWS::Route53::HealthCheck"
  },
  {
    "TF": "aws_route53_key_signing_key",
    "AWS": "AWS::Route53::KeySigningKey"
  },
  {
    "TF": "aws_route53_record",
    "AWS": "AWS::Route53::RecordSet"
  },
  {
    "TF": "aws_route53_resolver_firewall_domain_list",
    "AWS": "AWS::Route53Resolver::FirewallDomainList"
  },
  {
    "TF": "aws_route53_resolver_firewall_rule_group",
    "AWS": "AWS::Route53Resolver::FirewallRuleGroup"
  },
  {
    "TF": "aws_route53_resolver_firewall_rule_group_association",
    "AWS": "AWS::Route53Resolver::FirewallRuleGroupAssociation"
  },
  {
    "TF": "aws_route53_zone",
    "AWS": "AWS::Route53::HostedZone"
  },
  {
    "TF": "aws_route53recoveryreadiness_cell",
    "AWS": "AWS::Route53RecoveryReadiness::Cell"
  },
  {
    "TF": "aws_route53recoveryreadiness_readiness_check",
    "AWS": "AWS::Route53RecoveryReadiness::ReadinessCheck"
  },
  {
    "TF": "aws_route53recoveryreadiness_recovery_group",
    "AWS": "AWS::Route53RecoveryReadiness::RecoveryGroup"
  },
  {
    "TF": "aws_route53recoveryreadiness_resource_set",
    "AWS": "AWS::Route53RecoveryReadiness::ResourceSet"
  },
  {
    "TF": "aws_s3_access_point",
    "AWS": "AWS::S3::AccessPoint"
  },
  {
    "TF": "aws_s3_bucket",
    "AWS": "AWS::S3::Bucket"
  },
  {
    "TF": "aws_s3_bucket_policy",
    "AWS": "AWS::S3::BucketPolicy"
  },
  {
    "TF": "aws_s3outposts_endpoint",
    "AWS": "AWS::S3Outposts::Endpoint"
  },
  {
    "TF": "aws_sagemaker_app",
    "AWS": "AWS::SageMaker::App"
  },
  {
    "TF": "aws_sagemaker_app_image_config",
    "AWS": "AWS::SageMaker::AppImageConfig"
  },
  {
    "TF": "aws_sagemaker_code_repository",
    "AWS": "AWS::SageMaker::CodeRepository"
  },
  {
    "TF": "aws_sagemaker_device",
    "AWS": "AWS::SageMaker::Device"
  },
  {
    "TF": "aws_sagemaker_device_fleet",
    "AWS": "AWS::SageMaker::DeviceFleet"
  },
  {
    "TF": "aws_sagemaker_domain",
    "AWS": "AWS::SageMaker::Domain"
  },
  {
    "TF": "aws_sagemaker_endpoint",
    "AWS": "AWS::SageMaker::Endpoint"
  },
  {
    "TF": "aws_sagemaker_feature_group",
    "AWS": "AWS::SageMaker::FeatureGroup"
  },
  {
    "TF": "aws_sagemaker_image",
    "AWS": "AWS::SageMaker::Image"
  },
  {
    "TF": "aws_sagemaker_image_version",
    "AWS": "AWS::SageMaker::ImageVersion"
  },
  {
    "TF": "aws_sagemaker_model",
    "AWS": "AWS::SageMaker::Model"
  },
  {
    "TF": "aws_sagemaker_model_package_group",
    "AWS": "AWS::SageMaker::ModelPackageGroup"
  },
  {
    "TF": "aws_sagemaker_notebook_instance",
    "AWS": "AWS::SageMaker::NotebookInstance"
  },
  {
    "TF": "aws_sagemaker_user_profile",
    "AWS": "AWS::SageMaker::UserProfile"
  },
  {
    "TF": "aws_sagemaker_workteam",
    "AWS": "AWS::SageMaker::Workteam"
  },
  {
    "TF": "aws_schemas_discoverer",
    "AWS": "AWS::EventSchemas::Discoverer"
  },
  {
    "TF": "aws_schemas_registry",
    "AWS": "AWS::EventSchemas::Registry"
  },
  {
    "TF": "aws_schemas_schema",
    "AWS": "AWS::EventSchemas::Schema"
  },
  {
    "TF": "aws_secretsmanager_secret",
    "AWS": "AWS::SecretsManager::Secret"
  },
  {
    "TF": "aws_security_group",
    "AWS": "AWS::EC2::SecurityGroup"
  },
  {
    "TF": "aws_service_discovery_http_namespace",
    "AWS": "AWS::ServiceDiscovery::HttpNamespace"
  },
  {
    "TF": "aws_service_discovery_instance",
    "AWS": "AWS::ServiceDiscovery::Instance"
  },
  {
    "TF": "aws_service_discovery_private_dns_namespace",
    "AWS": "AWS::ServiceDiscovery::PrivateDnsNamespace"
  },
  {
    "TF": "aws_service_discovery_public_dns_namespace",
    "AWS": "AWS::ServiceDiscovery::PublicDnsNamespace"
  },
  {
    "TF": "aws_service_discovery_service",
    "AWS": "AWS::ServiceDiscovery::Service"
  },
  {
    "TF": "aws_servicecatalog_portfolio",
    "AWS": "AWS::ServiceCatalog::Portfolio"
  },
  {
    "TF": "aws_servicecatalog_portfolio_share",
    "AWS": "AWS::ServiceCatalog::PortfolioShare"
  },
  {
    "TF": "aws_servicecatalog_service_action",
    "AWS": "AWS::ServiceCatalog::ServiceAction"
  },
  {
    "TF": "aws_servicecatalog_tag_option",
    "AWS": "AWS::ServiceCatalog::TagOption"
  },
  {
    "TF": "aws_ses_configuration_set",
    "AWS": "AWS::SES::ConfigurationSet"
  },
  {
    "TF": "aws_ses_receipt_filter",
    "AWS": "AWS::SES::ReceiptFilter"
  },
  {
    "TF": "aws_ses_receipt_rule",
    "AWS": "AWS::SES::ReceiptRule"
  },
  {
    "TF": "aws_ses_receipt_rule_set",
    "AWS": "AWS::SES::ReceiptRuleSet"
  },
  {
    "TF": "aws_ses_template",
    "AWS": "AWS::SES::Template"
  },
  {
    "TF": "aws_signer_signing_profile",
    "AWS": "AWS::Signer::SigningProfile"
  },
  {
    "TF": "aws_sns_topic",
    "AWS": "AWS::SNS::Topic"
  },
  {
    "TF": "aws_sns_topic_policy",
    "AWS": "AWS::SNS::TopicPolicy"
  },
  {
    "TF": "aws_sns_topic_subscription",
    "AWS": "AWS::SNS::Subscription"
  },
  {
    "TF": "aws_sqs_queue",
    "AWS": "AWS::SQS::Queue"
  },
  {
    "TF": "aws_sqs_queue_policy",
    "AWS": "AWS::SQS::QueuePolicy"
  },
  {
    "TF": "aws_ssm_association",
    "AWS": "AWS::SSM::Association"
  },
  {
    "TF": "aws_ssm_document",
    "AWS": "AWS::SSM::Document"
  },
  {
    "TF": "aws_ssm_maintenance_window",
    "AWS": "AWS::SSM::MaintenanceWindow"
  },
  {
    "TF": "aws_ssm_maintenance_window_target",
    "AWS": "AWS::SSM::MaintenanceWindowTarget"
  },
  {
    "TF": "aws_ssm_maintenance_window_task",
    "AWS": "AWS::SSM::MaintenanceWindowTask"
  },
  {
    "TF": "aws_ssm_parameter",
    "AWS": "AWS::SSM::Parameter"
  },
  {
    "TF": "aws_ssm_patch_baseline",
    "AWS": "AWS::SSM::PatchBaseline"
  },
  {
    "TF": "aws_ssm_resource_data_sync",
    "AWS": "AWS::SSM::ResourceDataSync"
  },
  {
    "TF": "aws_subnet",
    "AWS": "AWS::EC2::Subnet"
  },
  {
    "TF": "aws_synthetics_canary",
    "AWS": "AWS::Synthetics::Canary"
  },
  {
    "TF": "aws_transfer_server",
    "AWS": "AWS::Transfer::Server"
  },
  {
    "TF": "aws_transfer_user",
    "AWS": "AWS::Transfer::User"
  },
  {
    "TF": "aws_volume_attachment",
    "AWS": "AWS::EC2::VolumeAttachment"
  },
  {
    "TF": "aws_vpc",
    "AWS": "AWS::EC2::VPC"
  },
  {
    "TF": "aws_vpc_dhcp_options_association",
    "AWS": "AWS::EC2::VPCDHCPOptionsAssociation"
  },
  {
    "TF": "aws_vpc_endpoint",
    "AWS": "AWS::EC2::VPCEndpoint"
  },
  {
    "TF": "aws_vpc_endpoint_connection_notification",
    "AWS": "AWS::EC2::VPCEndpointConnectionNotification"
  },
  {
    "TF": "aws_vpc_endpoint_service",
    "AWS": "AWS::EC2::VPCEndpointService"
  },
  {
    "TF": "aws_vpc_peering_connection",
    "AWS": "AWS::EC2::VPCPeeringConnection"
  },
  {
    "TF": "aws_vpn_connection",
    "AWS": "AWS::EC2::VPNConnection"
  },
  {
    "TF": "aws_vpn_connection_route",
    "AWS": "AWS::EC2::VPNConnectionRoute"
  },
  {
    "TF": "aws_vpn_gateway",
    "AWS": "AWS::EC2::VPNGateway"
  },
  {
    "TF": "aws_vpn_gateway_route_propagation",
    "AWS": "AWS::EC2::VPNGatewayRoutePropagation"
  },
  {
    "TF": "aws_waf_byte_match_set",
    "AWS": "AWS::WAF::ByteMatchSet"
  },
  {
    "TF": "aws_waf_ipset",
    "AWS": "AWS::WAF::IPSet"
  },
  {
    "TF": "aws_waf_rule",
    "AWS": "AWS::WAF::Rule"
  },
  {
    "TF": "aws_waf_size_constraint_set",
    "AWS": "AWS::WAF::SizeConstraintSet"
  },
  {
    "TF": "aws_waf_sql_injection_match_set",
    "AWS": "AWS::WAF::SqlInjectionMatchSet"
  },
  {
    "TF": "aws_waf_web_acl",
    "AWS": "AWS::WAF::WebACL"
  },
  {
    "TF": "aws_waf_xss_match_set",
    "AWS": "AWS::WAF::XssMatchSet"
  },
  {
    "TF": "aws_wafregional_byte_match_set",
    "AWS": "AWS::WAFRegional::ByteMatchSet"
  },
  {
    "TF": "aws_wafregional_geo_match_set",
    "AWS": "AWS::WAFRegional::GeoMatchSet"
  },
  {
    "TF": "aws_wafregional_ipset",
    "AWS": "AWS::WAFRegional::IPSet"
  },
  {
    "TF": "aws_wafregional_rate_based_rule",
    "AWS": "AWS::WAFRegional::RateBasedRule"
  },
  {
    "TF": "aws_wafregional_regex_pattern_set",
    "AWS": "AWS::WAFRegional::RegexPatternSet"
  },
  {
    "TF": "aws_wafregional_rule",
    "AWS": "AWS::WAFRegional::Rule"
  },
  {
    "TF": "aws_wafregional_size_constraint_set",
    "AWS": "AWS::WAFRegional::SizeConstraintSet"
  },
  {
    "TF": "aws_wafregional_sql_injection_match_set",
    "AWS": "AWS::WAFRegional::SqlInjectionMatchSet"
  },
  {
    "TF": "aws_wafregional_web_acl",
    "AWS": "AWS::WAFRegional::WebACL"
  },
  {
    "TF": "aws_wafregional_web_acl_association",
    "AWS": "AWS::WAFRegional::WebACLAssociation"
  },
  {
    "TF": "aws_wafregional_xss_match_set",
    "AWS": "AWS::WAFRegional::XssMatchSet"
  },
  {
    "TF": "aws_wafv2_ip_set",
    "AWS": "AWS::WAFv2::IPSet"
  },
  {
    "TF": "aws_wafv2_regex_pattern_set",
    "AWS": "AWS::WAFv2::RegexPatternSet"
  },
  {
    "TF": "aws_wafv2_rule_group",
    "AWS": "AWS::WAFv2::RuleGroup"
  },
  {
    "TF": "aws_wafv2_web_acl",
    "AWS": "AWS::WAFv2::WebACL"
  },
  {
    "TF": "aws_wafv2_web_acl_association",
    "AWS": "AWS::WAFv2::WebACLAssociation"
  },
  {
    "TF": "aws_workspaces_workspace",
    "AWS": "AWS::WorkSpaces::Workspace"
  },
  {
    "TF": "aws_xray_group",
    "AWS": "AWS::XRay::Group"
  },
  {
    "TF": "aws_xray_sampling_rule",
    "AWS": "AWS::XRay::SamplingRule"
  }
]
